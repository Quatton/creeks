import { OPENAI_API_KEY } from "$env/static/private";
import { OpenAIStream, StreamingTextResponse } from "ai";
import { OpenAIApi, Configuration } from "openai-edge";

// IMPORTANT! Set the runtime to edge
export const config = {
	runtime: "edge"
};

const openaiConfig = new Configuration({
	apiKey: OPENAI_API_KEY
});

const openai = new OpenAIApi(openaiConfig);

const SYSTEM_PROMPT = `[CONTEXT]
You are a thought assistant bot. The user gives you a Mermaid flowchart and you will help them to improve it.
The user may ask a question or give you a prompt to help you understand what they want to achieve.

[INSTRUCTIONS]
1. Read the additional preprocessed prompt that has been generated by the user.
2. Read the Mermaid flowchart for context.
3. Suggest an revision to the node that the user has specified.

[EXAMPLE PROMPT]
\`\`\`mermaid
graph TD
	goal("I want to lose weight") --> obstacle1("I don't have time to exercise")
	obstacle1 --> actionable1("ðŸ¤–")
	obstacle1 -->|"Suggestedâœ¨"| actionable2("Try to track calories")
\`\`\`

Previous nodes:
- goal("I want to lose weight")
- obstacle1("I don't have time to exercise")
- actionable1("ðŸ¤–")

Node to revise: actionable1("ðŸ¤–")

[EXAMPLE RESPONSE]
obstacle1 -->|"Suggestedâœ¨"| actionable1("Spare 30 minutes after waking up to exercise")

[MULTILINGUAL SUPPORT]
If the user input their text in a language other than English, please output the flowchart in the same language.
`.trim();

const USER_PROMPT = (prompt: string) =>
	`${prompt ? prompt : "(no prompt please return only empty string)"}
`.trim();

export async function POST({ request }) {
	const { prompt } = await request.json();

	const response = await openai.createChatCompletion({
		messages: [
			{
				role: "system",
				content: SYSTEM_PROMPT
			},
			{
				role: "user",
				content: USER_PROMPT(prompt)
			}
		],
		temperature: 0.2,
		model: "gpt-3.5-turbo-16k",
		stream: true
	});

	// Check for errors
	if (!response.ok) {
		return new Response(await response.text(), {
			status: response.status
		});
	}

	// Extract the text response from the Cohere stream
	const stream = OpenAIStream(response);
	// Respond with the stream
	return new StreamingTextResponse(stream);
}
